---
# tasks file for vpn

- name: Create VPN File
  file:
    path: ~/.vpn
    state: touch
    mode: '600'
  when: "'vpn' in group_names"

- name: Check for VPN File
  stat:
    path: ~/.vpn
  register: vpn

- block:
  - name: Check Environment
    command:
      cmd: systemd-detect-virt
    register: virt
    changed_when: false

  - name: Create Server File
    file:
      path: ~/.server
      state: touch
      mode: '600'
    when: "'servers' in group_names"

  - name: Check for Server File
    stat:
      path: ~/.server
    register: server

  - name: Create DNS File
    file:
      path: ~/.dns
      state: touch
      mode: '600'
    when: "'dns' in group_names"

  - name: Check for DNS File
    stat:
      path: ~/.dns
    register: dns

  - name: Create Work File
    file:
      path: ~/.work
      state: touch
      mode: '600'
    when: "'work' in group_names"

  - name: Check for Work File
    stat:
      path: ~/.work
    register: work

  - name: Install Tailscale
    become: true
    shell:
      cmd: curl -fsSL https://tailscale.com/install.sh | sh
    changed_when: false

  - name: Use Userspace Networking
    become: true
    lineinfile:
      path: "/etc/default/tailscaled"
      regexp: "^FLAGS="
      line: "FLAGS=\"--tun=userspace-networking\""
      state: present
    notify: Restart Tailscale
    when: virt.stdout == "lxc"

  - name: Flush Handlers
    meta: flush_handlers

  - name: Connect to VPN (Server)
    become: true
    shell:
      cmd: tailscale up --ssh --accept-routes --operator=$(whoami) --authkey {{ vpn_key }} --advertise-tags=tag:server
    when: "server.stat.exists and not dns.stat.exists"
    changed_when: false

  - name: Connect to VPN (DNS)
    become: true
    shell:
      cmd: tailscale up --ssh --accept-routes --operator=$(whoami) --authkey {{ vpn_key }} --advertise-tags=tag:server --accept-dns=false
    when: "dns.stat.exists"
    changed_when: false

  - name: Connect to VPN (Work)
    become: true
    shell:
      cmd: tailscale up --ssh --accept-routes --operator=$(whoami) --authkey {{ vpn_key }} --advertise-tags=tag:work
    when: work.stat.exists
    changed_when: false

  - name: Connect to VPN (Client)
    become: true
    shell:
      cmd: tailscale up --ssh --accept-routes --operator=$(whoami) --authkey {{ vpn_key }} --advertise-tags=tag:client
    when: "not server.stat.exists and not dns.stat.exists and not work.stat.exists"
    changed_when: false

  - name: Enable Auto-Updates
    become: true
    shell:
      cmd: tailscale set --auto-update
    changed_when: false
  when: "vpn.stat.exists"
