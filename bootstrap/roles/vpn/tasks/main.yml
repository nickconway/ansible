---
# tasks file for vpn

- name: Create VPN File
  file:
    path: ~/.vpn
    state: touch
    mode: '600'
  when: "'vpn' in group_names"
  changed_when: false

- name: Check for VPN File
  stat:
    path: ~/.vpn
  register: vpn

- block:
  - name: Install Netaddr
    pip:
      name: netaddr
      extra_args: --user --break-system-packages

  - name: Create Server File
    file:
      path: ~/.server
      state: touch
      mode: '600'
    when: "'servers' in group_names"
    changed_when: false

  - name: Check for Server File
    stat:
      path: ~/.server
    register: server

  - name: Create Client-Server File
    file:
      path: ~/.client-server
      state: touch
      mode: '600'
    when: "'client-server' in group_names"
    changed_when: false

  - name: Check for Client-Server File
    stat:
      path: ~/.client-server
    register: client_server

  - name: Create DNS File
    file:
      path: ~/.dns
      state: touch
      mode: '600'
    when: "'dns' in group_names"
    changed_when: false

  - name: Check for DNS File
    stat:
      path: ~/.dns
    register: dns

  - name: Create Subnet-Router File
    file:
      path: ~/.subnet-router
      state: touch
      mode: '600'
    when: "'vpn_subnet_router' in group_names"
    changed_when: false

  - name: Check for Subnet-Router File
    stat:
      path: ~/.subnet-router
    register: subnet_router

  - name: Create Work File
    file:
      path: ~/.work
      state: touch
      mode: '600'
    when: "'work' in group_names"
    changed_when: false

  - name: Check for Work File
    stat:
      path: ~/.work
    register: work

  - name: Get Current User
    shell:
      cmd: whoami
    register: current_user
    changed_when: false

  - name: Create Default Flags
    set_fact:
      flags: "--ssh --operator={{ current_user.stdout }} --authkey {{ vpn_key }}"

  - name: Add Client-Server Flags
    set_fact:
      flags: "{{ flags }} --advertise-tags=tag:server,tag:client"
    when: "client_server.stat.exists"

  - name: Add Server Flags
    set_fact:
      flags: "{{ flags }} --advertise-tags=tag:server"
    when: "server.stat.exists"

  - name: Add DNS Flags
    set_fact:
      flags: "{{ flags }} --accept-dns=false"
    when: "dns.stat.exists"

  - name: Add DNS False Flags
    set_fact:
      flags: "{{ flags }} --accept-dns=true"
    when: "not dns.stat.exists"

  - name: Add Subnet Router Flags
    set_fact:
      flags: "{{ flags }} --advertise-routes=10.0.10.0/24,10.0.100.0/24,10.0.107.0/24"
    when: "subnet_router.stat.exists"

  - name: Add Work Flags
    set_fact:
      flags: "{{ flags }} --advertise-tags=tag:work"
    when: work.stat.exists

  - name: Add Accept Routes Flags
    set_fact:
      flags: "{{ flags }} --accept-routes"
    when:
      - not (ansible_all_ipv4_addresses | ansible.utils.ipaddr('10.0.10.0/24'))
      - not (ansible_all_ipv4_addresses | ansible.utils.ipaddr('10.0.100.0/24'))
      - not (ansible_all_ipv4_addresses | ansible.utils.ipaddr('10.0.107.0/24'))

  - name: Add Accept Routes False Flags
    set_fact:
      flags: "{{ flags }} --accept-routes=false"
    when: (ansible_all_ipv4_addresses | ansible.utils.ipaddr('10.0.10.0/24')) or
          (ansible_all_ipv4_addresses | ansible.utils.ipaddr('10.0.100.0/24')) or
          (ansible_all_ipv4_addresses | ansible.utils.ipaddr('10.0.107.0/24')) or
          subnet_router.stat.exists

  - name: Install Tailscale
    become: true
    shell:
      cmd: curl -fsSL https://tailscale.com/install.sh | sh
    changed_when: false

  - name: Enable IP Forwarding
    become: true
    lineinfile:
      create: true
      path: /etc/sysctl.d/99-tailscale.conf
      line: "{{ item }}"
    loop:
      - net.ipv4.ip_forward = 1
      - net.ipv6.conf.all.forwarding = 1
    when: "dns.stat.exists"

  - name: Reload Sysctl
    become: true
    shell:
      cmd: sysctl -p /etc/sysctl.d/99-tailscale.conf
    when: "dns.stat.exists"
    changed_when: false

  - name: Connect to VPN
    become: true
    shell:
      cmd: tailscale up {{ flags }}
    changed_when: false

  - name: Enable Auto-Updates
    become: true
    shell:
      cmd: tailscale set --auto-update
    changed_when: false
  when: "vpn.stat.exists"
