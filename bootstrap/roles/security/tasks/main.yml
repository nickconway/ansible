---
# tasks file for security

- name: Get Service Facts
  service_facts:

- name: Get Current User
  command: whoami
  register: whoami
  changed_when: false

- name: Check If SSH Key Exists
  stat:
    path: ~/.ssh/id_ed25519
  delegate_to: localhost
  run_once: true
  register: ssh_key

- name: Generate SSH Key
  shell:
    cmd: ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -q -N "{{ ansible_become_pass }}"
  delegate_to: localhost
  run_once: true
  when: "not ssh_key.stat.exists"

- name: Add SSH Key to Authorized Keys
  authorized_key:
    user: "{{ whoami.stdout }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_ed25519.pub') }}"

- name: Install Open-SSH Server
  become: true
  package:
    name: openssh-server
  when: "'ssh' not in services and 'sshd' not in services"

- name: Add NTFY-SSH to PAM
  become: true
  lineinfile:
    path: "/etc/pam.d/sshd"
    line: "session optional pam_exec.so /usr/bin/ntfy-ssh"
    state: present
    mode: '644'
  when: "'ssh' in services or 'sshd' in services"

- name: Copy NTFY-SSH Script
  become: true
  template:
    src: files/ntfy-ssh
    dest: /usr/bin/ntfy-ssh
    owner: root
    group: root
    mode: '755'

- name: Start SSH Service (Debian)
  become: true
  service:
    name: "ssh"
    state: "started"
  when: "ansible_os_family == 'Debian' and 'ssh' in services"

- name: Start SSH Service
  become: true
  service:
    name: "sshd"
    state: "started"
  when: "ansible_os_family != 'Debian' and 'sshd' in services"

- name: Check If SSHD Config Exists
  stat:
    path: "/etc/ssh/sshd_config"
  register: sshd_config

- name: Secure SSH Configuration
  become: true
  lineinfile:
    path: "/etc/ssh/sshd_config"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: 'sshd -T -f %s'
    mode: '644'
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^PermitRootLogin"
      line: "PermitRootLogin no"
  notify: Restart SSH
  when: "sshd_config.stat.exists"
