---
# tasks file for git

- name: Get Environment
  shell: systemd-detect-virt
  register: virt
  changed_when: false
  ignore_errors: true

- name: Check for Gaming File
  stat:
    path: ~/.gaming
  register: gaming

- name: Include Gaming Variables
  include_vars: group_vars/gaming/vault.yml
  when: gaming.stat.exists

- include_tasks: ../utils/install.yml
  loop:
    - Debian: python3-cryptography
      Archlinux: python-cryptography
    - Debian: python3-bcrypt
      Archlinux: python-bcrypt

- name: Generate SSH Key for GitHub
  community.crypto.openssh_keypair:
    type: ed25519
    comment: "github {{ ansible_env.USER }}@{{ ansible_hostname }}"
    path: ~/.ssh/github_ed25519
    passphrase: "{{ ansible_become_pass }}"
    regenerate: full_idempotence
  register: ssh_key
  when:
    - "virt.stdout != 'wsl'"

- name: Generate SSH Key for GitHub (WSL)
  community.crypto.openssh_keypair:
    type: ed25519
    comment: "github {{ ansible_env.USER }}@{{ ansible_hostname }}-wsl"
    path: ~/.ssh/github_ed25519
    passphrase: "{{ ansible_become_pass }}"
    regenerate: full_idempotence
  register: ssh_key_wsl
  when:
    - "virt.stdout == 'wsl'"

- name: Add SSH Key to GitHub Account
  github_key:
    name: "{{ ansible_hostname }}"
    token: "{{ github_token }}"
    pubkey: "{{ ssh_key.public_key }}"
  when:
    - "virt.stdout != 'wsl'"

- name: Add SSH Key to GitHub Account (WSL)
  github_key:
    name: "{{ ansible_hostname }}-wsl"
    token: "{{ github_token }}"
    pubkey: "{{ ssh_key_wsl.public_key }}"
  when:
    - "virt.stdout == 'wsl'"

- name: Generate SSH Key for Gitea
  community.crypto.openssh_keypair:
    type: ed25519
    comment: "gitea {{ ansible_env.USER }}@{{ ansible_hostname }}"
    path: ~/.ssh/gitea_ed25519
    passphrase: "{{ ansible_become_pass }}"
    regenerate: full_idempotence
  register: ssh_key
  when:
    - "virt.stdout != 'wsl'"

- name: Generate SSH Key for Gitea (WSL)
  community.crypto.openssh_keypair:
    type: ed25519
    comment: "gitea {{ ansible_env.USER }}@{{ ansible_hostname }}-wsl"
    path: ~/.ssh/gitea_ed25519
    passphrase: "{{ ansible_become_pass }}"
    regenerate: full_idempotence
  register: ssh_key_wsl
  when:
    - "virt.stdout == 'wsl'"

- name: Add SSH Key to Gitea Account
  uri:
    url: "https://{{ git_url }}/api/v1/user/keys"
    body_format: json
    method: POST
    status_code:
      - 200
      - 201
    headers:
      Authorization: "token {{ gitea_token }}"
    body:
      title: "{{ ansible_hostname }}"
      key: "{{ ssh_key_wsl.public_key | default(ssh_key.public_key) }}"
  register: this
  when: git_url != "" and gitea_token != ""
  failed_when: this is failed and "Key content has been used as non-deploy key" not in this.json.message | default("")
